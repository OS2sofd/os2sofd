server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.tomcat.remoteip.remote-ip-header=x-forwarded-for

management.endpoints.web.base-path=/manage

# allow lookup in /manage/info from www.sofd.io static web resource
management.endpoints.web.cors.allowed-origins=https://www.sofd.io
management.endpoints.web.cors.allowed-methods=GET

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# minimum pool size of 0 ensures we do not keep unneeded open connection at the cost of having to create
# new connections when needed (with a bit of overhead after an idle period)
spring.datasource.hikari.minimum-idle=0
# maximum pool size is computed as
# - during a peak hour, expect 20.000 API calls
# - each API call takes 10 SQL queries to complete (guess) - which results in 200.000 SQL queries during that hour
# - 200.000 / 3.600 = 55 SQL queries per second
# - average SQL lookup takes 100ms (guess), resulting in 5.5 seconds with 1 connection, or 5.5 required connections to support requests
# - expect a 2x peak inside peak hour (spikes during peak), resulting in 11 required connections
# - we need 1 reserved connection for scheduled tasks, resulting in 12 required connections
# - we have 2 instances running, so half of that rounded up gives us max connections per instance of 6 - we round up to 8 to add some buffer
spring.datasource.hikari.maximum-pool-size=8
# expire after 2 minutes when idle, so the pool shutdown fast
spring.datasource.hikari.idle-timeout=120000
# expire after 20 minutes when in use, so we don't have long-living connections in the pool (might be killed by network infrastructure)
spring.datasource.hikari.max-lifetime=1200000

# some interceptor stuff gets confused without this one
spring.jpa.hibernate.use-new-id-generator-mappings=false

spring.jpa.open-in-view=true

# SAML defaults
di.saml.pages.nonsecured=/,/manage/**,/error,/webjars/**,/css/**,/js/**,/img/**,/api/**,/login,/download/**,/chart/**,/info,/favicon.ico
di.saml.sp.technicalContactEmail=helpdesk@digital-identity.dk
di.saml.claims.roleClaimName=roles
#di.saml.sp.forceAuthn=true
di.saml.pages.loginMetadataPath=/SSO
di.saml.pages.logoutMetadataPath=/SingleLogout

# disable JMX
spring.jmx.enabled=false

spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=never

spring.flyway.table=schema_version

# Fix for "the right state is not sent on a th:field object, which results in the checkbox always returning false."
# The issue was seen on manual ordering of ad accounts and the "requireApproval" checkbox.
# https://github.com/thymeleaf/thymeleaf-spring/issues/178
spring.thymeleaf.render-hidden-markers-before-checkboxes=true

# cleanup Spring Sessions JDB every 10 minutes with a bit of fuzz
# so we do not get conflicts across instances (and spread load across customers)
# note that this grabs an SQL connection
spring.session.jdbc.cleanup-cron=${random.int(60)} ${random.int(10)}/10 * * * *
